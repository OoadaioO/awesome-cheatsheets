##############################################################################
# [alias] 别名配置
##############################################################################
#日志美化
lg=log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit

##############################################################################
# 配置管理
##############################################################################
git config user.name username                      #设置项目用户名
git config user.email email                        #设置项目邮箱
git config --global user.name username             #设置全局用户名
git config --global user.email email               #设置全局邮箱




##############################################################################
# 分支管理
##############################################################################
git checkout name                            #切换分支
git checkout -b name                         #从远端同名分支新建本地分支
git checkout -b name name                    #从本地分支新建本地分支
git checkout -b name origin:name             #从远端分支新建本地分支
git branch -D name                           #删除本地分支
git push origin name --force                 #强制同步远端分支


##############################################################################
# Tag管理
##############################################################################
git tag -am "message" name                   #新建tag
git tag -d name                              #删除tag



##############################################################################
# 日志管理
##############################################################################
git log                                      #查看日志


##############################################################################
# gerrit使用
##############################################################################
#代码推送到托管仓库，并设置代码reviewer
git push origin HEAD:refs/for/$1%r=xx@qq.com,xx@qq.com   






